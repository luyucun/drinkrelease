V1.0
皮肤系统新增需求：

新增一种皮肤获取方式：直接投放

我会在其他系统中直接为玩家投放皮肤，而不是要求玩家还需要直接购买
我会在对应系统中直接配置对应的皮肤id，满足要求后，直接为玩家发放该皮肤

还是保持一样的规则，未获得的皮肤，就不会出现在皮肤界面中

同时原来的逻辑中有个关于SkinTemplate的这个用于展示的皮肤规则，现在不要求每个皮肤都要一定在这个文件夹中有对应的模型

在skinConfig中，尽管有些皮肤我配置了金币价格，但是我选择投放的时候，会直接赋予玩家，而不需要再让玩家花费金币



新增转盘系统：

概述：主要是让玩家通过转盘抽奖的方式来获得奖励

以下是转盘系统相关的规则：

触发转盘系统：
1.在workspace下有个模型叫LuckyZhuanZhuan，玩家靠近该模型，即在模型上出现roblox默认的那个长按E键交互的按钮，玩家长按E键（在手机上就是点击）对应按钮，即可打开转盘界面
2.打开转盘界面的逻辑就是将StarterGui - Wheel这个ScreenGui的enable属性改成true
3.玩家点击StarterGui - Wheel - WheelBg - CloseButton按钮，即可关闭界面（将StarterGui - Wheel这个ScreenGui的enable属性改成false）

转盘次数：
1.玩家的转盘数据是一个永久性储存数据，类似金币货币数值，不会随着玩家离线而消失，玩家初始转盘次数为0
2.玩家获取转盘的次数有2种方式：
    a.通过付费进行购买
    b.通过在线时长获得免费次数

    付费购买：
    1.我们共有三个开发者商品可供玩家选择购买，购买后获得对应的转盘次数
    2.玩家点击StarterGui - Wheel - WheelBg - Spin5这个按钮，可以触发对开发者商品3426739532的购买，购买成功后可以获得5次转盘使用次数
    3.玩家点击StarterGui - Wheel - WheelBg - Spin20这个按钮，可以触发对开发者商品3426739799的购买，购买成功后可以获得20次转盘使用次数
    4.玩家点击StarterGui - Wheel - WheelBg - Spin50这个按钮，可以触发对开发者商品3426739998的购买，购买成功后可以获得50次转盘使用次数

    免费次数：
    1.玩家每在线一定时长，均会获得1次免费的转盘次数，我们目前设定玩家每在线5分钟会获得1次免费的转盘次数
    2，玩家离线后再进来，需要重新开始倒计时
    3，玩家离线时，立刻停止倒计时
    4.StarterGui - Wheel - WheelBg - FreeCountDownTime - Time是一个textlabel，用于展示玩家获得免费转盘次数的倒计时，格式为XX:YY，分钟:秒的格式。倒计时结束后重新开始倒计时
    5.倒计时结束后为玩家发放一次免费次数

    次数显示：
    StarterGui - Wheel - WheelBg - RemainingTime - Time是一个textlabel，用于展示玩家当前拥有的可用的转盘次数


转盘逻辑：

1.我们的转盘共分6个格子，共6份奖励
2.转盘图片是StarterGui - Wheel - WheelBg - WheelColorBg从奖励1到奖励6，初始图片旋转rotation是0度，对应奖励1，60度代表奖励2，120度代表奖励3，180度代表奖励4，240度代表奖励5，300度代表奖励6
3.玩家点击StarterGui - Wheel - WheelBg - WheelColorBg - SpinButton这个按钮，可以触发转盘，点击后扣除一次转盘可用次数，如果点击时转盘次数不足，则点击没反应即可
4.在转盘旋转过程种，玩家如果直接关闭转盘界面，则关闭后立刻为玩家结算钻盘奖励
5.转盘表现：
    a).玩家点击SpinButton这个按钮触发转盘操作
    b).转盘固定快速转5圈，然后逐渐停下来，停在最终的抽奖结果上）

6.转盘结果计算：
    在我们的转盘表中，会给每个奖励内容添加奖励权重
    根据每个奖励的权重值，算出一个概率，从而来决定本次转盘的奖励是什么

7.转盘奖励提示
    每次转盘结束时，要等转盘停下来后，给玩家弹出提示并发放奖励
    奖励文本就是：道具名+xxx，比如金币，就是金币+500.
    提示文本样式就用我们游戏默认的提示文本的样式即可

8.音效
    在转盘转动过程中需要播放音效
    从转动开始，每完成转60度，就需要播放一次音效，音效资源id是：9120658649

icon：
在我们的界面上有个按钮StarterGui - Menu - ImageButtonWheel，通过点击这个按钮也可以打开我们的转盘界面
在进入倒计时状态后，我们现在的逻辑是：需要隐藏ImageButtonShop这个按钮，现在我们需要给ImageButtonWheel也增加一样的逻辑，也就是ImageButtonWheel与ImageButtonShop这俩按钮使用相同的出现与隐藏逻辑
ImageButtonWheel下有一个叫Num的textlabel，用于显示玩家当前可用的转盘次数，如果转盘次数为0，则需要把Num这个textlabel的visible修改为false
每次玩家的可用转盘次数更新时，都需要立即更新Num的状态，确保显示最新的转盘次数
每次玩家获得新的转盘次数时（不论是时间获得还是付费购买），都需要播放一个小动画，具体逻辑是：
    ImageButtonWheel下有个叫Add的textlabel，先把textlabel的文本修改为本次获得的转盘次数，比如+5这样，然后让Add的visible属性设置为true，做一个从当前位置往上移动的小动画，位置是从{1.338, 0},{0.2, 0}到{1.338, 0},{0, 0}，动画快速播放完成后，再把Add的visible属性改成false


奖励类型：
    1）金币
    2）跳过阶段道具
    3）验证毒药道具
    4）指定Id的皮肤

    配置：
我们的转盘配置是：
位置	奖励类型	道具参数	权重
1	4	1011	3
2	1	20	40
3	2	1	8
4	1	50	25
5	3	1	8
6	1	100	16

其中当我的奖励类型是4时，后面的道具参数是对应的皮肤id，如果奖励类型是1/2/3.则道具参数是发放的数量

补充规则：现在我们需要新增一条规则：当我们使用转盘时，如果转盘的1号位的皮肤我们已经拥有，则本次转盘转动，我们在概率计算时不算这个皮肤，只会随
  到其他的奖励。这个要在每次转盘开始随奖励之前都要进行一次判断

  补充：新玩家第一次是3分钟一个转盘，之后全部都是5分钟一个转盘


V1.1  新增跳舞动作购买

在我们的游戏中，现在玩家胜利后，会播放一段庆祝动作
我们新增的需求是：增加一批新的庆祝动作供玩家购买，玩家可以使用金币进行购买，购买成功后可以选择在已拥有的跳舞动作中装备一个

详细逻辑：

跳舞动作展示：
1.在workspace中，有一个叫AnimationSell的文件夹，下面有Npc01/Npc02/Npc03共3个角色模型
2.游戏创建后，NPC01需要默认播放rbxassetid://87686948832992这个动作，循环往复一直不断播放；NPC02播放rbxassetid://79979515443365；NPC03播放rbxassetid://10714360164；这三个动作都是循环往复不断播放
3.新增一张跳舞动作配置表：

    动作id	动作名字	动作资源	金币价格	icon资源
1001	Default	rbxassetid://113375965758912	0	rbxassetid://130227350331156
1002	Make You Mine	rbxassetid://87686948832992	100	rbxassetid://130227350331156
1003	Blackpink Dance	rbxassetid://79979515443365	100	rbxassetid://130227350331156
1004	Hero Landing	rbxassetid://10714360164	100	rbxassetid://130227350331156

其中有动作的金币价格/icon资源id/动作名字等信息

玩家靠近Npc01/NPC01/NPC03这三个模型时，分别在模型上展示出默认的游戏内的交互E键（现有的比如转盘或者皮肤或者宝箱等一样的逻辑），显示出金币价格
玩家长按E键可完成对该动作的购买，如金币不足则购买失败，如果已经有的情况下下购买，也购买失败，并系统提示Already Owned，购买成功与失败的提示都用系统通用默认的提示方式（在右下角弹出的提示）

客户端规则：
1.玩家点击StarterGui - Menu - ImageButtonEmote这个按钮，可以打开庆祝动作界面（将StarterGui - Emote - EmoteBg的visible属性改成true）；
2.玩家点击StarterGui - Emote - EmoteBg - CloseBtn按钮可以关闭界面（将StarterGui - Emote - EmoteBg的visible属性改成false）

界面信息：
1.StarterGui - Emote - EmoteBg - ScrollingFrame - EmoteTemplate是一个我们的庆祝动作的模板，用于展示玩家已经获得的动作的信息，也供玩家进行动作切换
2.EmoteTemplate下有个叫Icon的imageLabel，用于展示跳舞动作的icon，Name是一个textlabel，用于展示跳舞动作的名字。EmoteTemplate的visible默认是false，当复制一条跳舞动作信息时，需要将复制出来的卡片信息的visible属性改成true，不然可能会看不到
3.在这个界面只展示玩家已经拥有的跳舞动作，未拥有的不展示出来；3
4.EmoteTemplate下有个叫Right的imagelabel，是一个绿色对勾，默认visible始终是false，只有当该动作玩家正在装备中时，才把Right的visible改成true，用于代表玩家已经装备了该庆祝动作，切换到另一个动作时，就需要把当前这个动作的right的visible改成false，把切换成功的那个动作的right的visible改成true

跳舞动作就是当对方死亡后，玩家在原地播放的庆祝动作，玩家可以选择播放哪个庆祝动作（装备了哪个播哪个）


V1.2

新增静音功能：
玩家点击StarterGui - Mute - ImageButtonEmote这个按钮，可以进行静音操作
游戏默认是播放bgm的，玩家可以点击这个静音按钮让bgm音量设定为0，静音状态下再次点击可以恢复bgm播放

在ImageButtonEmote下有两个imagelabel，一个是Mute，一个是Unmute，mute代表当前还未静音，Unmute代表当前已经被静音
默认情况下bgm播放时，Mute的visible属性是true，Unmute的visible属性是false，当玩家点击按钮静音成功后，需要把Mute的visible属性改成false，把Unmute的visible属性改成true

玩家的是否静音效果按钮只在本次登录有效，下次重新登录游戏，静音状态依然是初始默认状态


V1.3
重构庆祝动作与leave按钮逻辑：

我的详细需求是：
1.玩家靠近座椅后，自动坐到椅子上，此时视为占了一个椅子的位置，同时出现leave按钮（我的leave按钮是：StarterGui - Leave - LeaveBtnBg - LeaveBtn）
2.玩家点击leave按钮可以离开座位

玩家坐到椅子上时，视为进入“准备状态”，准备状态下：
1.leave按钮出现
2.镜头变成对准桌子
3.桌子上的玩家数量数量要及时更新

进入对战流程后（包括注入毒药阶段和选择奶茶服下的阶段），需要隐藏leave按钮

关于庆祝动作：
玩家A和玩家B对战，假设A获胜，此时A需要：
1.接触当前所坐的座位的坐下状态，变成站起来
2.将玩家的移动和跳跃都设定为0，然后玩家开始播放庆祝动作（这里可以适当做一个延迟，等玩家站起来后等0.5秒再开始播放庆祝动作）
3.庆祝动作播放结束后，恢复玩家的移动和跳跃为默认值

仅执行以上逻辑即可实现正确的逻辑，不要再去做其他的各种限制和赋予玩家效果的操作

V1.4 新增操作倒计时功能：

概述：
目前我们的所有让玩家操作的阶段都没有倒计时，什么时候进入下一阶段全看玩家什么时候操作，这是显著的设计问题，所以我们要在不同的阶段都加入倒计时

详细规则：

目前玩家从入座到结束共分4个阶段：1）入座后的等待开始阶段；2）倒计时阶段3）各自选择毒药注入阶段4）玩家轮流选择奶茶服用阶段，其中需要加入倒计时功能的阶段分别是：阶段3/阶段4，阶段1和阶段2不需要倒计时

每个需要倒计时的阶段，其中的倒计时都分开走一个独立的配置，也就是每个阶段给玩家的倒计时可能不同可能相同，分开提供配置即可，暂定阶段3是15秒，阶段4是15秒

倒计时的逻辑：
阶段3的倒计时逻辑：
1.这个阶段双方都需要进行操作，所以此时的倒计时是针对双方的，双方共享一个倒计时
2.当倒计时结束时，如果有玩家还未完成选择，则需要系统自动为玩家选择一个奶茶注入毒药（默认玩家随机点了一个毒药并点击了后面ConfirmBg弹框的NoBtn），要注意的是：在系统为玩家选择了奶茶注入毒药到进入下一阶段之前这个过程中，玩家点击奶茶不生效，进入下一阶段才再允许玩家点击奶茶交互
3.详细的表现是：
    1）我们现有的逻辑是给玩家单独显示StarterGui - ConfirmTips的内容，如果玩家点击了奶茶后就把ConfirmTips的visible再改成false
    2）我们现在需要修改为：给玩家单独显示StarterGui - ConfirmTips的内容，但是我们在ConfirmTips下除了原来的Tips，还新增了ProgressBg这个frame和Time这个textlabel
    3）ProgressBg是用来当倒计时进度条的背景的，ProgressBar是ProgressBg的子节点，用于长度变化来表现出倒计时条效果的，在倒计时过程中，ProgressBar的长度默认是0（注意这里是scale），随着倒计时进行，ProgressBar的长度逐渐变长，当倒计时结束时ProgressBar的长度正好变为1
    4）StarterGui - ConfirmTips - Time是用于显示倒计时的，实时限时倒计时的秒数，格式为XX:YY,XX是秒，YY是毫秒。当倒计时进入5秒后，需要把StarterGui - ConfirmTips - Time的字体颜色改成红色
    5）在这个阶段，如果自己已经完成了毒药注入，则需要把StarterGui - ConfirmTips - Tips的文本内容改为：Waiting for opponent，同时隐藏progressBg和Time，只显示Tips
4.在这个阶段，如果倒计时结束之前双方都完成了毒药注入，则立刻进入下一阶段

阶段4的倒计时逻辑：
1.这个阶段是双方轮流选择奶茶服用，目前我们保持具体的提示文本逻辑不变，也就是A饮用时，给A显示的时Pick a drink to drink，而对方显示的是其他内容，反之亦然
2.我们的倒计时此时是针对需要选择奶茶服用的那个玩家，如果倒计时内玩家选择了奶茶服用，则进行下一阶段给对方选择奶茶服用，此时倒计时针对对方并重新开始，如果倒计时结束后玩家依然没有选择奶茶服用，则系统随机为该玩家选择一杯场中的奶茶，供玩家服用，视为玩家自己选了
3.在我们的StarterGui - Confirm - SelectTips下也新增了ProgressBg这个Frame和Time这个textlabel，ProgressBg是用来当倒计时进度条的背景的，ProgressBar是ProgressBg的子节点，用于长度变化来表现出倒计时条效果的，在倒计时过程中，ProgressBar的长度默认是0（注意这里是scale），随着倒计时进行，ProgressBar的长度逐渐变长，当倒计时结束时ProgressBar的长度正好变为1
4.StarterGui - SelectTips - Time是用于显示倒计时的，实时限时倒计时的秒数，格式为XX:YY,XX是秒，YY是毫秒。当倒计时进入5秒后，需要把StarterGui - ConfirmTips - Time的字体颜色改成红色


V1.5
新增喝饮料的动作

我们现在的逻辑是：玩家会挨个选择饮料喝下，但是实际上我们只有镜头对准了，没有任何玩家的动作
现在我们需要加入喝奶茶的动作，具体的逻辑是：

1.玩家选择玩奶茶后，镜头开始对准玩家
2.镜头移动完成后，玩家开始播放喝奶茶动作，播放喝奶茶动作时：
    1）桌子上玩家选择的那杯奶茶首先要移除
    2）在玩家的右手手里出现一杯玩家选择的那个奶茶的模型
    3）在手里出现的奶茶的模型，要将该模型下的NumPart这个组件下的BillboardGui的Enable属性设置为false

3.动作id是：rbxassetid://135940354239870

4.要在播放完动作后，再进行是否安全或者死亡的结算