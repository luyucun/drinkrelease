V1.0
皮肤系统新增需求：

新增一种皮肤获取方式：直接投放

我会在其他系统中直接为玩家投放皮肤，而不是要求玩家还需要直接购买
我会在对应系统中直接配置对应的皮肤id，满足要求后，直接为玩家发放该皮肤

还是保持一样的规则，未获得的皮肤，就不会出现在皮肤界面中

同时原来的逻辑中有个关于SkinTemplate的这个用于展示的皮肤规则，现在不要求每个皮肤都要一定在这个文件夹中有对应的模型

在skinConfig中，尽管有些皮肤我配置了金币价格，但是我选择投放的时候，会直接赋予玩家，而不需要再让玩家花费金币



新增转盘系统：

概述：主要是让玩家通过转盘抽奖的方式来获得奖励

以下是转盘系统相关的规则：

触发转盘系统：
1.在workspace下有个模型叫LuckyZhuanZhuan，玩家靠近该模型，即在模型上出现roblox默认的那个长按E键交互的按钮，玩家长按E键（在手机上就是点击）对应按钮，即可打开转盘界面
2.打开转盘界面的逻辑就是将StarterGui - Wheel这个ScreenGui的enable属性改成true
3.玩家点击StarterGui - Wheel - WheelBg - CloseButton按钮，即可关闭界面（将StarterGui - Wheel这个ScreenGui的enable属性改成false）

转盘次数：
1.玩家的转盘数据是一个永久性储存数据，类似金币货币数值，不会随着玩家离线而消失，玩家初始转盘次数为0
2.玩家获取转盘的次数有2种方式：
    a.通过付费进行购买
    b.通过在线时长获得免费次数

    付费购买：
    1.我们共有三个开发者商品可供玩家选择购买，购买后获得对应的转盘次数
    2.玩家点击StarterGui - Wheel - WheelBg - Spin5这个按钮，可以触发对开发者商品3426739532的购买，购买成功后可以获得5次转盘使用次数
    3.玩家点击StarterGui - Wheel - WheelBg - Spin20这个按钮，可以触发对开发者商品3426739799的购买，购买成功后可以获得20次转盘使用次数
    4.玩家点击StarterGui - Wheel - WheelBg - Spin50这个按钮，可以触发对开发者商品3426739998的购买，购买成功后可以获得50次转盘使用次数

    免费次数：
    1.玩家每在线一定时长，均会获得1次免费的转盘次数，我们目前设定玩家每在线5分钟会获得1次免费的转盘次数
    2，玩家离线后再进来，需要重新开始倒计时
    3，玩家离线时，立刻停止倒计时
    4.StarterGui - Wheel - WheelBg - FreeCountDownTime - Time是一个textlabel，用于展示玩家获得免费转盘次数的倒计时，格式为XX:YY，分钟:秒的格式。倒计时结束后重新开始倒计时
    5.倒计时结束后为玩家发放一次免费次数

    次数显示：
    StarterGui - Wheel - WheelBg - RemainingTime - Time是一个textlabel，用于展示玩家当前拥有的可用的转盘次数


转盘逻辑：

1.我们的转盘共分6个格子，共6份奖励
2.转盘图片是StarterGui - Wheel - WheelBg - WheelColorBg从奖励1到奖励6，初始图片旋转rotation是0度，对应奖励1，60度代表奖励2，120度代表奖励3，180度代表奖励4，240度代表奖励5，300度代表奖励6
3.玩家点击StarterGui - Wheel - WheelBg - WheelColorBg - SpinButton这个按钮，可以触发转盘，点击后扣除一次转盘可用次数，如果点击时转盘次数不足，则点击没反应即可
4.在转盘旋转过程种，玩家如果直接关闭转盘界面，则关闭后立刻为玩家结算钻盘奖励
5.转盘表现：
    a).玩家点击SpinButton这个按钮触发转盘操作
    b).转盘固定快速转5圈，然后逐渐停下来，停在最终的抽奖结果上）

6.转盘结果计算：
    在我们的转盘表中，会给每个奖励内容添加奖励权重
    根据每个奖励的权重值，算出一个概率，从而来决定本次转盘的奖励是什么

7.转盘奖励提示
    每次转盘结束时，要等转盘停下来后，给玩家弹出提示并发放奖励
    奖励文本就是：道具名+xxx，比如金币，就是金币+500.
    提示文本样式就用我们游戏默认的提示文本的样式即可

8.音效
    在转盘转动过程中需要播放音效
    从转动开始，每完成转60度，就需要播放一次音效，音效资源id是：9120658649

icon：
在我们的界面上有个按钮StarterGui - Menu - ImageButtonWheel，通过点击这个按钮也可以打开我们的转盘界面
在进入倒计时状态后，我们现在的逻辑是：需要隐藏ImageButtonShop这个按钮，现在我们需要给ImageButtonWheel也增加一样的逻辑，也就是ImageButtonWheel与ImageButtonShop这俩按钮使用相同的出现与隐藏逻辑
ImageButtonWheel下有一个叫Num的textlabel，用于显示玩家当前可用的转盘次数，如果转盘次数为0，则需要把Num这个textlabel的visible修改为false
每次玩家的可用转盘次数更新时，都需要立即更新Num的状态，确保显示最新的转盘次数
每次玩家获得新的转盘次数时（不论是时间获得还是付费购买），都需要播放一个小动画，具体逻辑是：
    ImageButtonWheel下有个叫Add的textlabel，先把textlabel的文本修改为本次获得的转盘次数，比如+5这样，然后让Add的visible属性设置为true，做一个从当前位置往上移动的小动画，位置是从{1.338, 0},{0.2, 0}到{1.338, 0},{0, 0}，动画快速播放完成后，再把Add的visible属性改成false


奖励类型：
    1）金币
    2）跳过阶段道具
    3）验证毒药道具
    4）指定Id的皮肤

    配置：
我们的转盘配置是：
位置	奖励类型	道具参数	权重
1	4	1011	3
2	1	20	40
3	2	1	8
4	1	50	25
5	3	1	8
6	1	100	16

其中当我的奖励类型是4时，后面的道具参数是对应的皮肤id，如果奖励类型是1/2/3.则道具参数是发放的数量

补充规则：现在我们需要新增一条规则：当我们使用转盘时，如果转盘的1号位的皮肤我们已经拥有，则本次转盘转动，我们在概率计算时不算这个皮肤，只会随
  到其他的奖励。这个要在每次转盘开始随奖励之前都要进行一次判断

  补充：新玩家第一次是3分钟一个转盘，之后全部都是5分钟一个转盘


V1.1  新增跳舞动作购买

在我们的游戏中，现在玩家胜利后，会播放一段庆祝动作
我们新增的需求是：增加一批新的庆祝动作供玩家购买，玩家可以使用金币进行购买，购买成功后可以选择在已拥有的跳舞动作中装备一个

详细逻辑：

跳舞动作展示：
1.在workspace中，有一个叫AnimationSell的文件夹，下面有Npc01/Npc02/Npc03共3个角色模型
2.游戏创建后，NPC01需要默认播放rbxassetid://87686948832992这个动作，循环往复一直不断播放；NPC02播放rbxassetid://79979515443365；NPC03播放rbxassetid://10714360164；这三个动作都是循环往复不断播放
3.新增一张跳舞动作配置表：

    动作id	动作名字	动作资源	金币价格	icon资源
1001	Default	rbxassetid://113375965758912	0	rbxassetid://130227350331156
1002	Make You Mine	rbxassetid://87686948832992	100	rbxassetid://130227350331156
1003	Blackpink Dance	rbxassetid://79979515443365	100	rbxassetid://130227350331156
1004	Hero Landing	rbxassetid://10714360164	100	rbxassetid://130227350331156

其中有动作的金币价格/icon资源id/动作名字等信息

玩家靠近Npc01/NPC01/NPC03这三个模型时，分别在模型上展示出默认的游戏内的交互E键（现有的比如转盘或者皮肤或者宝箱等一样的逻辑），显示出金币价格
玩家长按E键可完成对该动作的购买，如金币不足则购买失败，如果已经有的情况下下购买，也购买失败，并系统提示Already Owned，购买成功与失败的提示都用系统通用默认的提示方式（在右下角弹出的提示）

客户端规则：
1.玩家点击StarterGui - Menu - ImageButtonEmote这个按钮，可以打开庆祝动作界面（将StarterGui - Emote - EmoteBg的visible属性改成true）；
2.玩家点击StarterGui - Emote - EmoteBg - CloseBtn按钮可以关闭界面（将StarterGui - Emote - EmoteBg的visible属性改成false）

界面信息：
1.StarterGui - Emote - EmoteBg - ScrollingFrame - EmoteTemplate是一个我们的庆祝动作的模板，用于展示玩家已经获得的动作的信息，也供玩家进行动作切换
2.EmoteTemplate下有个叫Icon的imageLabel，用于展示跳舞动作的icon，Name是一个textlabel，用于展示跳舞动作的名字。EmoteTemplate的visible默认是false，当复制一条跳舞动作信息时，需要将复制出来的卡片信息的visible属性改成true，不然可能会看不到
3.在这个界面只展示玩家已经拥有的跳舞动作，未拥有的不展示出来；3
4.EmoteTemplate下有个叫Right的imagelabel，是一个绿色对勾，默认visible始终是false，只有当该动作玩家正在装备中时，才把Right的visible改成true，用于代表玩家已经装备了该庆祝动作，切换到另一个动作时，就需要把当前这个动作的right的visible改成false，把切换成功的那个动作的right的visible改成true

跳舞动作就是当对方死亡后，玩家在原地播放的庆祝动作，玩家可以选择播放哪个庆祝动作（装备了哪个播哪个）


V1.2

新增静音功能：
玩家点击StarterGui - Mute - ImageButtonEmote这个按钮，可以进行静音操作
游戏默认是播放bgm的，玩家可以点击这个静音按钮让bgm音量设定为0，静音状态下再次点击可以恢复bgm播放

在ImageButtonEmote下有两个imagelabel，一个是Mute，一个是Unmute，mute代表当前还未静音，Unmute代表当前已经被静音
默认情况下bgm播放时，Mute的visible属性是true，Unmute的visible属性是false，当玩家点击按钮静音成功后，需要把Mute的visible属性改成false，把Unmute的visible属性改成true

玩家的是否静音效果按钮只在本次登录有效，下次重新登录游戏，静音状态依然是初始默认状态


V1.3
重构庆祝动作与leave按钮逻辑：

我的详细需求是：
1.玩家靠近座椅后，自动坐到椅子上，此时视为占了一个椅子的位置，同时出现leave按钮（我的leave按钮是：StarterGui - Leave - LeaveBtnBg - LeaveBtn）
2.玩家点击leave按钮可以离开座位

玩家坐到椅子上时，视为进入“准备状态”，准备状态下：
1.leave按钮出现
2.镜头变成对准桌子
3.桌子上的玩家数量数量要及时更新

进入对战流程后（包括注入毒药阶段和选择奶茶服下的阶段），需要隐藏leave按钮

关于庆祝动作：
玩家A和玩家B对战，假设A获胜，此时A需要：
1.接触当前所坐的座位的坐下状态，变成站起来
2.将玩家的移动和跳跃都设定为0，然后玩家开始播放庆祝动作（这里可以适当做一个延迟，等玩家站起来后等0.5秒再开始播放庆祝动作）
3.庆祝动作播放结束后，恢复玩家的移动和跳跃为默认值

仅执行以上逻辑即可实现正确的逻辑，不要再去做其他的各种限制和赋予玩家效果的操作

V1.4 新增操作倒计时功能：

概述：
目前我们的所有让玩家操作的阶段都没有倒计时，什么时候进入下一阶段全看玩家什么时候操作，这是显著的设计问题，所以我们要在不同的阶段都加入倒计时

详细规则：

目前玩家从入座到结束共分4个阶段：1）入座后的等待开始阶段；2）倒计时阶段3）各自选择毒药注入阶段4）玩家轮流选择奶茶服用阶段，其中需要加入倒计时功能的阶段分别是：阶段3/阶段4，阶段1和阶段2不需要倒计时

每个需要倒计时的阶段，其中的倒计时都分开走一个独立的配置，也就是每个阶段给玩家的倒计时可能不同可能相同，分开提供配置即可，暂定阶段3是15秒，阶段4是15秒

倒计时的逻辑：
阶段3的倒计时逻辑：
1.这个阶段双方都需要进行操作，所以此时的倒计时是针对双方的，双方共享一个倒计时
2.当倒计时结束时，如果有玩家还未完成选择，则需要系统自动为玩家选择一个奶茶注入毒药（默认玩家随机点了一个毒药并点击了后面ConfirmBg弹框的NoBtn），要注意的是：在系统为玩家选择了奶茶注入毒药到进入下一阶段之前这个过程中，玩家点击奶茶不生效，进入下一阶段才再允许玩家点击奶茶交互
3.详细的表现是：
    1）我们现有的逻辑是给玩家单独显示StarterGui - ConfirmTips的内容，如果玩家点击了奶茶后就把ConfirmTips的visible再改成false
    2）我们现在需要修改为：给玩家单独显示StarterGui - ConfirmTips的内容，但是我们在ConfirmTips下除了原来的Tips，还新增了ProgressBg这个frame和Time这个textlabel
    3）ProgressBg是用来当倒计时进度条的背景的，ProgressBar是ProgressBg的子节点，用于长度变化来表现出倒计时条效果的，在倒计时过程中，ProgressBar的长度默认是0（注意这里是scale），随着倒计时进行，ProgressBar的长度逐渐变长，当倒计时结束时ProgressBar的长度正好变为1
    4）StarterGui - ConfirmTips - Time是用于显示倒计时的，实时限时倒计时的秒数，格式为XX:YY,XX是秒，YY是毫秒。当倒计时进入5秒后，需要把StarterGui - ConfirmTips - Time的字体颜色改成红色
    5）在这个阶段，如果自己已经完成了毒药注入，则需要把StarterGui - ConfirmTips - Tips的文本内容改为：Waiting for opponent，同时隐藏progressBg和Time，只显示Tips
4.在这个阶段，如果倒计时结束之前双方都完成了毒药注入，则立刻进入下一阶段

阶段4的倒计时逻辑：
1.这个阶段是双方轮流选择奶茶服用，目前我们保持具体的提示文本逻辑不变，也就是A饮用时，给A显示的时Pick a drink to drink，而对方显示的是其他内容，反之亦然
2.我们的倒计时此时是针对需要选择奶茶服用的那个玩家，如果倒计时内玩家选择了奶茶服用，则进行下一阶段给对方选择奶茶服用，此时倒计时针对对方并重新开始，如果倒计时结束后玩家依然没有选择奶茶服用，则系统随机为该玩家选择一杯场中的奶茶，供玩家服用，视为玩家自己选了
3.在我们的StarterGui - Confirm - SelectTips下也新增了ProgressBg这个Frame和Time这个textlabel，ProgressBg是用来当倒计时进度条的背景的，ProgressBar是ProgressBg的子节点，用于长度变化来表现出倒计时条效果的，在倒计时过程中，ProgressBar的长度默认是0（注意这里是scale），随着倒计时进行，ProgressBar的长度逐渐变长，当倒计时结束时ProgressBar的长度正好变为1
4.StarterGui - SelectTips - Time是用于显示倒计时的，实时限时倒计时的秒数，格式为XX:YY,XX是秒，YY是毫秒。当倒计时进入5秒后，需要把StarterGui - ConfirmTips - Time的字体颜色改成红色


V1.5
新增喝饮料的动作

我们现在的逻辑是：玩家会挨个选择饮料喝下，但是实际上我们只有镜头对准了，没有任何玩家的动作
现在我们需要加入喝奶茶的动作，具体的逻辑是：

1.玩家选择玩奶茶后，镜头开始对准玩家
2.镜头移动完成后，玩家开始播放喝奶茶动作，播放喝奶茶动作时：
    1）桌子上玩家选择的那杯奶茶首先要移除
    2）在玩家的右手手里出现一杯玩家选择的那个奶茶的模型
    3）在手里出现的奶茶的模型，要将该模型下的NumPart这个组件下的BillboardGui的Enable属性设置为false

3.动作id是：rbxassetid://135940354239870

4.要在播放完动作后，再进行是否安全或者死亡的结算

V1.6 新增新手引导机器人对局

概述：
在当前的游戏逻辑基础上，增加一个新手玩家进来的对局，核心逻辑是加了一个单独的place，新玩家进来后在该place种，在place中对局一局后，玩家再传送至我们现有的place中进行多人对局

新的place
1.我们的项目下现在新增了一个场景，名字叫：Newplayer
2.新玩家第一次进来游戏时，默认传送至该场景中
3.当一个老玩家进入我们游戏后，不再被传送到Newplayer，而是传送到我们游戏默认的Place 中

新玩家的判断：
1.在我们的Newplayer场景中，我们会引导玩家进行一场对局，只有这场对局结束后，不论玩家胜利与否，玩家才会被打上老玩家的标签
2.在新手对局中，如果玩家没有玩完直接退游戏或者离线了，都不给玩家打老玩家的标签，下次进来的时候依然视该玩家为新玩家，依然会被传送到Newplayer

NPC
1.在Newplayer这个场景的Workspace下。我们放置了一个NPC，名字就叫NPC，这是一个标准人形NPC，有Humanoid和HumanoidRootPart
2.当新玩家进入这个场景后，需要强制将这个NPC放到Workspace - 2Player - 2player_group1 - ClassicChair1上，在ClassicChair1上有个Seat，让这个NPC强行坐到这个位置上
3.NPC坐到椅子上后，默认桌子的对局人数从0/2变成1/2，也就是说这个NPC其实是我们给玩家准备的人机玩家

对局逻辑：
在新手引导场景（Newplayer）中，所有的对局逻辑都与常规的对局逻辑保持一致，比如倒计时/镜头变化/阶段变化/死亡判断等

但是要注意，有一些在新手引导流程中需要进行特殊处理：
1.金币发放
    在新手引导对局中，玩家喝下奶茶，不发放金币，可以处理为发放金币数等于0即可
2.道具禁用
    在对局的任何阶段都禁用道具使用，这个可以直接处理为在新手对局中将StarterGui - Props这个screenGUI的enable属性始终保持为false即可
3.跳过注入毒药阶段的随机多一个毒药阶段
    在选择奶茶注入毒药时，直接注入即可，跳过先弹框让玩家选择是否购买开发者产品的那个流程


NPC行为
1.NPC模拟为一个常规玩家
2.在每个轮到NPC行为的阶段，都在倒计时开始后，随机延迟2-4秒，然后做出一个选择


关于玩家引导箭头
在新玩家加入游戏进入Newplayer中后，需要将玩家引导至空座椅上坐下并开局
我们的引导表现逻辑是：
1.在我们的ReplicatedStorage下，有个叫Arrow的文件夹，其中有一个叫Arrow_A的Part和一个叫Arrow_B的Part
2.在Workspace - 2Player - 2player_group1 - ClassicChair2 - Seat下生成一个Attachment，名字命名为Attachment01。同时在玩家的身上HumanoidRootPart下也生成一个Attachment，名字命名为Attachment02
3.在Workspace - 2Player - 2player_group1 - ClassicChair2 - Seat下同时生成一个Beam，这个beam去复制Arrow_A下的那个Beam即可
4.Beam复制成功后，需要将Beam的Attachment0设置为椅子上生成的那个Attachment01，将Beam的Attachment02设置为玩家身上的Attachment02
5.当玩家成功坐到椅子上后，将Beam移除并将椅子上的Attachment01和玩家身上的Attachment02去除

新手引导对局结束
1.在Newplayer中，Workspace下有个叫Portal的模型，将该模型的坐标更改为24.03, 2.5, -128.58
2.玩家和该模型交互（靠近模型出现游戏默认的E键交互键）长按E键（要求用时1秒完成交互），交互完成后，将玩家传送至该我们默认的场景

埋点：
我们需要加一个埋点漏斗：
玩家进入Newplayer一个打点，玩家坐在椅子上一个打点，玩家与Portal完成交互一个打点


一些补充的设定：
1.我会把这个场景设定为最多1个人，也就是新手场景中只会同时有一个玩家
2.NPC这个模型我们认为是一个玩家（其实是一个人机，人机的所有操作都是系统给设定的，其实就是帮选而已）
3.玩家是否是新玩家这个数据是一个永久性数据需要储存，新手引导结束后玩家传送至默认场景时如果玩家离线或者传送失败，也默认将玩家标为老玩家，下次进来直接传默认场景，可以在PlayerData中添加一个"newPlayerCompleted"字段
4.NPC行为在2-4秒后做一个选择其实是模拟一个真实玩家的抉择过程，注入毒药和选奶茶阶段的文本都与当前的逻辑保持一致
5.NPC就使用场景中默认的皮肤即可，其中庆祝动作和奶茶模型都是使用新玩家默认的皮肤数据
6.新手对局过程中的"直接注入即可，跳过先弹框让玩家选择是否购买开发者产品的那个流程"是指完全跳过毒药选择UI显示，还是需要玩家手动选择一个的，而不是自动选一个毒药
7.NPC逻辑就用简单逻辑即可，一切走随机
8.策划案说的"当玩家成功坐到椅子上后，将Beam移除"是指玩家进入场景立刻显示，玩家一直不坐就一致显示
9.策划案说"玩家与该模型交互，靠近模型出现E键交互键，长按E键交互"可以直接设定交互时长，Portable模型就在场景中只是之前在其他位置而已，我们要做的就是把这个模型挪过来让玩家可交互
10.策划案说"如果玩家没有玩完直接退游戏或者离线了，都不给玩家打老玩家的标签"，这里说的”没有玩完“是指没有出结果没比如玩家胜利或者失败都算有结果
11.数据埋点只需要这三个埋点即可不用拓展


V1.7好友邀请功能
概述：
我们需要在游戏中添加好友邀请功能，玩家可以邀请好友加入游戏后领取奖励，或者与同服务器的好友一起游玩时会获得奖励加成

详细规则：

邀请好友进入游戏奖励：
1.玩家累计邀请1个好友/3个好友/5个好友进入游戏时，可以分别领取一次奖励
2.邀请奖励每天的utc0点重置次数与奖励，也就是说每次刷新之后玩家可以再次邀请好友进入游戏，然后满足条件后再次领取奖励
3.utc0点重置时，重置的是当前已经邀请进来的人数状态以及当前奖励的领取状态

奖励类型：
类型1：发放金币
类型2：发放转盘次数
类型3：发放道具：清除对方所有毒药

好友共同游玩奖励：
1.邀请好友进入同一个服务器，可以获得奖励加成，注意一定是要在同一个服务器房间才算满足要求
2.如果有多个好友同时在同一个服务器房间游玩，那加成是可叠加的
3.具体加成逻辑是：每有一个玩家在游戏内共同进行游戏，玩家在每次对局喝奶茶过程中，可以获得的金币数量+20%，如果有两个好友在服务器房间，则+40%，以此类推
4.也就是说比如我们现在每次喝奶茶可以获得5点金币，有1个好友的情况下，我们是每次获得6点金币，2个好友的话是每次获得7点金币
5.奖励验证不需要那么严格，每局比赛开始的时候，根据玩家当前的好友加成状态判断本局比赛玩家的好友加成数值是多少即可，比如中途有好友离线了，本场比赛也还是沿用这个加成数值，下局开始再按新的加成值计算

客户端逻辑：

打开/关闭界面
1.玩家点击StarterGui - Menu - ImageButtonInvite按钮，可以打开邀请界面（将StarterGui - Invite这个ScreenGui的enable属性改成true）
2.玩家点击StarterGui - Invite - InvitBg - CloseButton这个按钮，可以关闭邀请界面（将StarterGui - Invite这个ScreenGui的enable属性改成false）

主界面逻辑：
StarterGui - Menu - FriendAdd - AddNum是一个textlabel，用于显示当前玩家的好友共同游玩加成奖励数值
比如当前服务器有2个玩家的好友，则AddNum这个Textlabel的文本就是40%

StarterGui - Menu - ImageButtonInvite - RedPoint是一个红点，常规状态下RedPoint的visible属性是false，但是当玩家有未领取的邀请奖励时，需要把RedPoint的visible属性改成true
当玩家把所有可领取的奖励领取 完成后，再把RedPoint的visible属性改成false

StarterGui - Invite - InvitBg - CountDownTime是个textlabel，用于显示当前的奖励重置倒计时，固定文本格式是：Refresh in：XX:XX:XX,分别代表时：分：秒，在界面打开的情况下需要实时更新倒计时
StarterGui - Invite - InvitBg - InviteButton是一个button，玩家点击按钮，可以调出系统的邀请好友界面

我们的奖励规划是：
累计邀请1个好友，奖励金币200
累计邀请3个好友，奖励金币200+1次转盘次数
累计邀请5个好友，奖励金币200+2次转盘次数+1个清除敌方毒药道具

在StarterGui - Invite - InvitBg - ScrollingFrame下，有InviteReward1/InviteReward3/InviteReward5三个Frame，分别用于展示3项奖励的内容
我们以InviteReward1举例来做客户端交互说明：
    1）InviteReward1是个Frame，其下有Claim这个按钮，用于领取奖励，玩家点击这个按钮，可以触发对该条目奖励的领取，如果满足领取条件，则领取成功为玩家发放对应的奖励，如果不满足领取条件，则系统提示：不满足领取条件Requirements Not Met，这个提示就走系统通用的提示即可
    2）玩家如果领取成功了，则需要把Claim按钮置灰，并且把Claim - Text这个textlabel的文本改成Claimed
    3）InviteReward1下有个叫Prograss的TextLabel，用于显示玩家当前的邀请进度，格式是X/Y，左边是当前邀请人数，右边是要求的人数，比如这个条目是要求邀请1个人，玩家当前已经邀请了3个人，则文本就是3/1，如果这个条目是要求玩家邀请5个人，玩家邀请了3个，则这里文本是3/5

测试debug
你需要在功能开发的时候，内置好几个测试命令：
1.模拟完成一次好友邀请成功
2.重置所有邀请状态

补充说明：

关于好友邀请的一些判断条件说明：
1.使用roblox内置的邀请判断即可
2.需要对方通过玩家发起的好友邀请链接进入游戏才算邀请成功，这个roblox应该有内置的功能判断
3.邀请人数的奖励，不要求邀请进来的玩家一定是玩家的好友，只要是玩家邀请进来的，就算邀请成功，邀请人数就+1
4.关于好友加成，我是指对金币的奖励加成，这个要求一定要是玩家的好友，好友关系且同时在同一个房间，则给双方都带来加成，好友的加成不一定非要玩家邀请进来，只要是好友关系并且都是在同一个服务器，都算加成
5.同一个好友多次进入，只算一次邀请成功
6.同一个好友多次进来同一个房间，每次进来时候都需要实时更新金币加成数值
7.好友的金币加成和邀请奖励是两个概念，一定要区分开来

邀请奖励发放
1.只发放给邀请者，比如A邀请B进来，只算A邀请了1个人，不算B邀请
2.邀请奖励只能玩家通过手动点击领取奖励按钮才能领取

好友加成的一些补充：
1.仅限roblox好友才算加成
2.没有加成上限，每多一个好友就有20%加成
3.每个玩家都要根据当前服务器的好友状态来决定加成比例，比如A和B互为好友，A就有20%加成，但是在房间内，C和D都是B的好友，此时B的好友有A/C/D，所以B的加成是60%

关于重置时间：
重置倒计时以服务器时间为准
倒计时的ui可以自己客户端计算，比如每次进入游戏时校对服务器时间，然后进行客户端计算

转盘次数现在有时间发放和购买两种渠道，这里可能需要额外开发第三种获取渠道来进行奖励发放

允许多个玩家同时邀请一个玩家，比如B邀请了A，C也邀请了A，A进入B的服务器，就算A的邀请成功，但是不算B的，主要判断依据是看实际是根据谁的邀请链接进来的
是否保存重置时间可以你自己判断，总体需求就是每天只能最多领一轮邀请奖励，不论什么时候进来，重置倒计时就是所有服务器统一的系统utc0点


补充：
去除了好友同时在线的加成金币逻辑
去除了喝奶茶获得金币的逻辑（数值改成了0）

V1.8
新增每日任务：

在游戏内新增每日任务系统，任务在每天的UTC点重置进度，玩家完成每日任务可以领取奖励

任务类型：
1.完成X局对战

奖励类型：
1.发放金币
2.发放转盘次数

具体的客户端逻辑：

1.玩家点击StarterGui - Menu - ImageButtonDaily这个按钮可以打开任务界面（把StarterGui - Task的Enable属性改成True）
2.玩家点击StarterGui - Task - TaskBg - CloseButton，可以关闭任务界面（把StarterGui - Task的Enable属性改成False）

当有可领取但是玩家未领取的每日任务奖励时，玩家的daily按钮上要有红点，具体逻辑是：将StarterGui - Menu - ImageButtonDaily - RedPoint是一个红点，常规状态下RedPoint的visible属性是false，但是当玩家有未领取的邀请奖励时，需要把RedPoint的visible属性改成true
如果玩家奖励领取完后，要及时更新红点状态，将红点隐藏

在我们的StarterGui - Task - TaskBg - ScrollingFrame - Template是我们的任务列表模板，任务生成时要根据任务表信息去复制模板，然后生成我们对应的任务列表
其中Template - ClaimButton是领取按钮，任务未完成奖励无法领取时，按钮置灰，点击无法用（这里参考我们邀请功能界面的奖励领取按钮，无法领取时保持一样的表现逻辑）
Template - ClaimButton在奖励可领取时，就变成常规的可领取状态，玩家点击领取后可以领取奖励，并且在右下角弹出领取成功的系统提示
在玩家领取成功奖励后，需要把Template - ClaimButton的Visible属性改成False，同时把Template - Complete的Visible属性改成True
Template - TaskDes是任务描述，去读取任务表中任务对应的任务描述即可
Template - RewardBg是我们的任务奖励图标与信息，其中Template - RewardBg - Rewardicon是奖励图标，去读取我们的任务奖励图标icon，Template - RewardBg - RewardNum是奖励数量


我们的任务表是：

任务id	任务描述	任务奖励类型	任务奖励数量	奖励图标icon
1	Complete 1 matches	1	200	rbxassetid://18209599044
2	Complete 3 matches	1	300	rbxassetid://18209599044
3	Complete 5 matches	2	2	rbxassetid://140226468670502

任务表说明：
1.任务id是唯一id
2.任务描述是对应的显示出来的任务内容描述
3.奖励类型中，1代表发放金币，2代表发放转盘可用次数
4.任务奖励数量与任务奖励类型结合起来就可以得出本次奖励的发放类型与数量
5.奖励图标icon是奖励的图标

补充：
1.只要参加了一局对局分出了胜负，不论输赢，就算完成一局，注意：新手场景与NPC的对战也算是完成了一局对局
2.utc0点重置时直接刷新ui
3.奖励发放失败按你的理解来执行但是你得告诉我你怎么执行的
4.任务进度需要实时同步
5.数据要使用datastore进行储存
6.ui在加载时生成一次


V1.9
新手皮肤引导

我需要引导玩家去购买新手皮肤

当玩家完成了新手场景的对局，进入主场景后：

1.进入主场景后主动弹出daily界面（注意一定是主场景才弹）
2.当判断玩家的金币数量大于等于200时（需要在玩家金币数发生变化的时候立刻生效），开始引导玩家去购买新手皮肤

具体逻辑是： 
参考我们新手场景中生成玩家和桌子之间箭头的逻辑，在玩家身上生成attachment01，在场景的WorkSpace下寻找一个叫GuideAttachment的Part，在其下生成Attachment02
在Beam生成后，判定玩家到达了GuideAttachment边上（距离可以与判定玩家购买皮肤弹出E交互键的距离相同），就移除beam

注意：我不是要直接发给玩家皮肤，只是指引玩家前往一个地方而已